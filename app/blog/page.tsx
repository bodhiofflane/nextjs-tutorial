import { Metadata } from "next";
import Link from 'next/link';

// Вспомогательные функции не экспортируются.
// В экспорте метадаты, важно именование "metadata".
// В экспорте компонента страницы важно что бы экспорт был дефолтным.
async function getData() {
  // Это не обычный fetch который мы используем в браузере.
  // Во-первых: Он отрабатывает на сервере. У него расширены возможности со стороны Next.js, а имеено расширен объет с настройкам запроса. Позже.
  const response = await fetch("https://jsonplaceholder.typicode.com/posts", {
    next: {
      revalidate: 60, // Отвечает за количество секунд кеширования, после которого будет происходить перезапрос постов. Не для пользователя, а для сервера.
    }
  });

  if (!response.ok) {
    throw new Error('Ошибка получения постов')
  }

  // ! Поумолчанию кеширование включено. Получив данные один раз - они остаются навсегда.
  // Это не оптимальный сценарий и нам нужно как то рабоать с кешированием.

  return response.json();
}

export const metadata: Metadata = {
  title: "Blog | Next App",
  description: "Generated by create next app",
};

// Серверные компоненты в отличии от обычных React-компонентов - могут быть асинхронными.
export default async function Blog() {
  const posts = await getData();

  // Первый возврат происходит долго, последующие - быстро.
  
  return (
    <>
      <h1>Blog</h1>
      <ul>
        {posts.map((post: any, index: number) => {
          return (
            // key требуется даже если мы не будуем ререндерить.
            <li key={index}>
              <Link href={`/blog/${post.id}`}>
                {post.title}
              </Link>
            </li>
          )
        })}
      </ul>
    </>
  );
}
